// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	auth "Nft-Go/gateway/internal/handler/auth"
	user "Nft-Go/gateway/internal/handler/user"
	"Nft-Go/gateway/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/upload",
				Handler: auth.UploadHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: auth.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: auth.RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/notice/all",
					Handler: user.GetAllNoticeHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/notice/id",
					Handler: user.GetNoticeByIdHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/notice/title",
					Handler: user.GetNoticeByTitleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/notice/username",
					Handler: user.GetUserInfoByUserNameHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/logout",
					Handler: user.LogoutHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/refreshToken",
					Handler: user.RefreshTokenHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1"),
	)
}
