// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.3
// source: nft.proto

package nft

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{0}
}

type CommonResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CommonResult) Reset() {
	*x = CommonResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResult) ProtoMessage() {}

func (x *CommonResult) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResult.ProtoReflect.Descriptor instead.
func (*CommonResult) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{1}
}

func (x *CommonResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMessageByHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetMessageByHashRequest) Reset() {
	*x = GetMessageByHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageByHashRequest) ProtoMessage() {}

func (x *GetMessageByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageByHashRequest.ProtoReflect.Descriptor instead.
func (*GetMessageByHashRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{2}
}

func (x *GetMessageByHashRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetMessageByHashDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                       int32                       `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	AccountMessageVO           *AccountMessageVO           `protobuf:"bytes,2,opt,name=accountMessageVO,proto3" json:"accountMessageVO,omitempty"`
	CollectionMessageOnChainVO *CollectionMessageOnChainVO `protobuf:"bytes,3,opt,name=collectionMessageOnChainVO,proto3" json:"collectionMessageOnChainVO,omitempty"`
}

func (x *GetMessageByHashDTO) Reset() {
	*x = GetMessageByHashDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageByHashDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageByHashDTO) ProtoMessage() {}

func (x *GetMessageByHashDTO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageByHashDTO.ProtoReflect.Descriptor instead.
func (*GetMessageByHashDTO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{3}
}

func (x *GetMessageByHashDTO) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetMessageByHashDTO) GetAccountMessageVO() *AccountMessageVO {
	if x != nil {
		return x.AccountMessageVO
	}
	return nil
}

func (x *GetMessageByHashDTO) GetCollectionMessageOnChainVO() *CollectionMessageOnChainVO {
	if x != nil {
		return x.CollectionMessageOnChainVO
	}
	return nil
}

type AccountMessageVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash             string          `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	RegisterTime     string          `protobuf:"bytes,2,opt,name=registerTime,proto3" json:"registerTime,omitempty"`
	OwnedCollections []*DcOverviewVO `protobuf:"bytes,3,rep,name=ownedCollections,proto3" json:"ownedCollections,omitempty"`
}

func (x *AccountMessageVO) Reset() {
	*x = AccountMessageVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMessageVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMessageVO) ProtoMessage() {}

func (x *AccountMessageVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMessageVO.ProtoReflect.Descriptor instead.
func (*AccountMessageVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{4}
}

func (x *AccountMessageVO) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *AccountMessageVO) GetRegisterTime() string {
	if x != nil {
		return x.RegisterTime
	}
	return ""
}

func (x *AccountMessageVO) GetOwnedCollections() []*DcOverviewVO {
	if x != nil {
		return x.OwnedCollections
	}
	return nil
}

type DcOverviewVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash    string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	GetTime string `protobuf:"bytes,3,opt,name=getTime,proto3" json:"getTime,omitempty"`
}

func (x *DcOverviewVO) Reset() {
	*x = DcOverviewVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcOverviewVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcOverviewVO) ProtoMessage() {}

func (x *DcOverviewVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcOverviewVO.ProtoReflect.Descriptor instead.
func (*DcOverviewVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{5}
}

func (x *DcOverviewVO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DcOverviewVO) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *DcOverviewVO) GetGetTime() string {
	if x != nil {
		return x.GetTime
	}
	return ""
}

type CreateActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateActivityBo *CreateActivityBO `protobuf:"bytes,1,opt,name=createActivityBo,proto3" json:"createActivityBo,omitempty"`
}

func (x *CreateActivityRequest) Reset() {
	*x = CreateActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityRequest) ProtoMessage() {}

func (x *CreateActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityRequest.ProtoReflect.Descriptor instead.
func (*CreateActivityRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{6}
}

func (x *CreateActivityRequest) GetCreateActivityBo() *CreateActivityBO {
	if x != nil {
		return x.CreateActivityBo
	}
	return nil
}

type CreateActivityBO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Amount        int32  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	DcName        string `protobuf:"bytes,5,opt,name=dcName,proto3" json:"dcName,omitempty"`
	DcDescription string `protobuf:"bytes,6,opt,name=dcDescription,proto3" json:"dcDescription,omitempty"`
	Cid           string `protobuf:"bytes,7,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *CreateActivityBO) Reset() {
	*x = CreateActivityBO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityBO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityBO) ProtoMessage() {}

func (x *CreateActivityBO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityBO.ProtoReflect.Descriptor instead.
func (*CreateActivityBO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{7}
}

func (x *CreateActivityBO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateActivityBO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateActivityBO) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateActivityBO) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateActivityBO) GetDcName() string {
	if x != nil {
		return x.DcName
	}
	return ""
}

func (x *CreateActivityBO) GetDcDescription() string {
	if x != nil {
		return x.DcDescription
	}
	return ""
}

func (x *CreateActivityBO) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type GetDcFromActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetDcFromActivityBo *GetDcFromActivityBO `protobuf:"bytes,1,opt,name=getDcFromActivityBo,proto3" json:"getDcFromActivityBo,omitempty"`
}

func (x *GetDcFromActivityRequest) Reset() {
	*x = GetDcFromActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDcFromActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDcFromActivityRequest) ProtoMessage() {}

func (x *GetDcFromActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDcFromActivityRequest.ProtoReflect.Descriptor instead.
func (*GetDcFromActivityRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{8}
}

func (x *GetDcFromActivityRequest) GetGetDcFromActivityBo() *GetDcFromActivityBO {
	if x != nil {
		return x.GetDcFromActivityBo
	}
	return nil
}

type GetDcFromActivityBO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GetDcFromActivityBO) Reset() {
	*x = GetDcFromActivityBO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDcFromActivityBO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDcFromActivityBO) ProtoMessage() {}

func (x *GetDcFromActivityBO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDcFromActivityBO.ProtoReflect.Descriptor instead.
func (*GetDcFromActivityBO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{9}
}

func (x *GetDcFromActivityBO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDcFromActivityBO) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GetOneActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOneActivityRequest) Reset() {
	*x = GetOneActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneActivityRequest) ProtoMessage() {}

func (x *GetOneActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneActivityRequest.ProtoReflect.Descriptor instead.
func (*GetOneActivityRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{10}
}

func (x *GetOneActivityRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SearchActivitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchActivityBO *SearchActivityBO `protobuf:"bytes,1,opt,name=searchActivityBO,proto3" json:"searchActivityBO,omitempty"`
}

func (x *SearchActivitiesRequest) Reset() {
	*x = SearchActivitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchActivitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchActivitiesRequest) ProtoMessage() {}

func (x *SearchActivitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchActivitiesRequest.ProtoReflect.Descriptor instead.
func (*SearchActivitiesRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{11}
}

func (x *SearchActivitiesRequest) GetSearchActivityBO() *SearchActivityBO {
	if x != nil {
		return x.SearchActivityBO
	}
	return nil
}

type SearchActivityBO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName     string `protobuf:"bytes,1,opt,name=hostName,proto3" json:"hostName,omitempty"`
	ActivityName string `protobuf:"bytes,2,opt,name=activityName,proto3" json:"activityName,omitempty"`
}

func (x *SearchActivityBO) Reset() {
	*x = SearchActivityBO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchActivityBO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchActivityBO) ProtoMessage() {}

func (x *SearchActivityBO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchActivityBO.ProtoReflect.Descriptor instead.
func (*SearchActivityBO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{12}
}

func (x *SearchActivityBO) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *SearchActivityBO) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

type ActivityPageVOList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityPageVO []*ActivityPageVO `protobuf:"bytes,1,rep,name=activityPageVO,proto3" json:"activityPageVO,omitempty"`
}

func (x *ActivityPageVOList) Reset() {
	*x = ActivityPageVOList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityPageVOList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityPageVOList) ProtoMessage() {}

func (x *ActivityPageVOList) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityPageVOList.ProtoReflect.Descriptor instead.
func (*ActivityPageVOList) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{13}
}

func (x *ActivityPageVOList) GetActivityPageVO() []*ActivityPageVO {
	if x != nil {
		return x.ActivityPageVO
	}
	return nil
}

type ActivityPageVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Url         string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	HostName    string `protobuf:"bytes,5,opt,name=hostName,proto3" json:"hostName,omitempty"`
	HostAddress string `protobuf:"bytes,6,opt,name=hostAddress,proto3" json:"hostAddress,omitempty"`
	Amount      int32  `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Left        int32  `protobuf:"varint,8,opt,name=left,proto3" json:"left,omitempty"`
}

func (x *ActivityPageVO) Reset() {
	*x = ActivityPageVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityPageVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityPageVO) ProtoMessage() {}

func (x *ActivityPageVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityPageVO.ProtoReflect.Descriptor instead.
func (*ActivityPageVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{14}
}

func (x *ActivityPageVO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityPageVO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActivityPageVO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ActivityPageVO) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ActivityPageVO) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *ActivityPageVO) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *ActivityPageVO) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ActivityPageVO) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

type ActivityDetailsVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ActivityName        string `protobuf:"bytes,2,opt,name=activityName,proto3" json:"activityName,omitempty"`
	ActivityDescription string `protobuf:"bytes,3,opt,name=activityDescription,proto3" json:"activityDescription,omitempty"`
	DcName              string `protobuf:"bytes,4,opt,name=dcName,proto3" json:"dcName,omitempty"`
	DcDescription       string `protobuf:"bytes,5,opt,name=dcDescription,proto3" json:"dcDescription,omitempty"`
	Url                 string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	HostName            string `protobuf:"bytes,7,opt,name=hostName,proto3" json:"hostName,omitempty"`
	HostAddress         string `protobuf:"bytes,8,opt,name=hostAddress,proto3" json:"hostAddress,omitempty"`
	Amount              int32  `protobuf:"varint,9,opt,name=amount,proto3" json:"amount,omitempty"`
	Left                int32  `protobuf:"varint,10,opt,name=left,proto3" json:"left,omitempty"`
	ContractAddress     string `protobuf:"bytes,11,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
}

func (x *ActivityDetailsVO) Reset() {
	*x = ActivityDetailsVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDetailsVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDetailsVO) ProtoMessage() {}

func (x *ActivityDetailsVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDetailsVO.ProtoReflect.Descriptor instead.
func (*ActivityDetailsVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{15}
}

func (x *ActivityDetailsVO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityDetailsVO) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ActivityDetailsVO) GetActivityDescription() string {
	if x != nil {
		return x.ActivityDescription
	}
	return ""
}

func (x *ActivityDetailsVO) GetDcName() string {
	if x != nil {
		return x.DcName
	}
	return ""
}

func (x *ActivityDetailsVO) GetDcDescription() string {
	if x != nil {
		return x.DcDescription
	}
	return ""
}

func (x *ActivityDetailsVO) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ActivityDetailsVO) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *ActivityDetailsVO) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *ActivityDetailsVO) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ActivityDetailsVO) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *ActivityDetailsVO) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type GiveDcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GiveDcBo *GiveDcBO `protobuf:"bytes,1,opt,name=giveDcBo,proto3" json:"giveDcBo,omitempty"`
}

func (x *GiveDcRequest) Reset() {
	*x = GiveDcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiveDcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveDcRequest) ProtoMessage() {}

func (x *GiveDcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveDcRequest.ProtoReflect.Descriptor instead.
func (*GiveDcRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{16}
}

func (x *GiveDcRequest) GetGiveDcBo() *GiveDcBO {
	if x != nil {
		return x.GiveDcBo
	}
	return nil
}

type GiveDcBO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToName    string `protobuf:"bytes,1,opt,name=toName,proto3" json:"toName,omitempty"`
	ToAddress string `protobuf:"bytes,2,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	DcId      int32  `protobuf:"varint,3,opt,name=dcId,proto3" json:"dcId,omitempty"`
}

func (x *GiveDcBO) Reset() {
	*x = GiveDcBO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiveDcBO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveDcBO) ProtoMessage() {}

func (x *GiveDcBO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveDcBO.ProtoReflect.Descriptor instead.
func (*GiveDcBO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{17}
}

func (x *GiveDcBO) GetToName() string {
	if x != nil {
		return x.ToName
	}
	return ""
}

func (x *GiveDcBO) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *GiveDcBO) GetDcId() int32 {
	if x != nil {
		return x.DcId
	}
	return 0
}

type SelectDcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SelectDcRequest) Reset() {
	*x = SelectDcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectDcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectDcRequest) ProtoMessage() {}

func (x *SelectDcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectDcRequest.ProtoReflect.Descriptor instead.
func (*SelectDcRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{18}
}

func (x *SelectDcRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDcByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDcByIdRequest) Reset() {
	*x = GetDcByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDcByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDcByIdRequest) ProtoMessage() {}

func (x *GetDcByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDcByIdRequest.ProtoReflect.Descriptor instead.
func (*GetDcByIdRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{19}
}

func (x *GetDcByIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDigitalCollectionHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDigitalCollectionHistoryRequest) Reset() {
	*x = GetDigitalCollectionHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDigitalCollectionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDigitalCollectionHistoryRequest) ProtoMessage() {}

func (x *GetDigitalCollectionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDigitalCollectionHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetDigitalCollectionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{20}
}

func (x *GetDigitalCollectionHistoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DcPageVOList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DcPageVO []*DcPageVO `protobuf:"bytes,1,rep,name=dcPageVO,proto3" json:"dcPageVO,omitempty"`
}

func (x *DcPageVOList) Reset() {
	*x = DcPageVOList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcPageVOList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcPageVOList) ProtoMessage() {}

func (x *DcPageVOList) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcPageVOList.ProtoReflect.Descriptor instead.
func (*DcPageVOList) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{21}
}

func (x *DcPageVOList) GetDcPageVO() []*DcPageVO {
	if x != nil {
		return x.DcPageVO
	}
	return nil
}

type DcPageVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DcId        int32  `protobuf:"varint,3,opt,name=dcId,proto3" json:"dcId,omitempty"`
	Hash        string `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	CreatorName string `protobuf:"bytes,5,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	Price       int32  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *DcPageVO) Reset() {
	*x = DcPageVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcPageVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcPageVO) ProtoMessage() {}

func (x *DcPageVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcPageVO.ProtoReflect.Descriptor instead.
func (*DcPageVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{22}
}

func (x *DcPageVO) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DcPageVO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DcPageVO) GetDcId() int32 {
	if x != nil {
		return x.DcId
	}
	return 0
}

func (x *DcPageVO) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *DcPageVO) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *DcPageVO) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type DcDetailVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DcId            int32  `protobuf:"varint,1,opt,name=dcId,proto3" json:"dcId,omitempty"`
	Hash            string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Url             string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description     string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Price           int32  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	CreatorName     string `protobuf:"bytes,7,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	CreatorAddress  string `protobuf:"bytes,8,opt,name=creatorAddress,proto3" json:"creatorAddress,omitempty"`
	OwnerName       string `protobuf:"bytes,9,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	OwnerAddress    string `protobuf:"bytes,10,opt,name=ownerAddress,proto3" json:"ownerAddress,omitempty"`
	ContractAddress string `protobuf:"bytes,11,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
}

func (x *DcDetailVO) Reset() {
	*x = DcDetailVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DcDetailVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DcDetailVO) ProtoMessage() {}

func (x *DcDetailVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DcDetailVO.ProtoReflect.Descriptor instead.
func (*DcDetailVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{23}
}

func (x *DcDetailVO) GetDcId() int32 {
	if x != nil {
		return x.DcId
	}
	return 0
}

func (x *DcDetailVO) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *DcDetailVO) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DcDetailVO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DcDetailVO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DcDetailVO) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DcDetailVO) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *DcDetailVO) GetCreatorAddress() string {
	if x != nil {
		return x.CreatorAddress
	}
	return ""
}

func (x *DcDetailVO) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *DcDetailVO) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *DcDetailVO) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type CollectionMessageOnChainVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash            string         `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Description     string         `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatorAddress  string         `protobuf:"bytes,4,opt,name=creatorAddress,proto3" json:"creatorAddress,omitempty"`
	OwnerAddress    string         `protobuf:"bytes,5,opt,name=ownerAddress,proto3" json:"ownerAddress,omitempty"`
	TraceBackVOList []*TraceBackVO `protobuf:"bytes,6,rep,name=traceBackVOList,proto3" json:"traceBackVOList,omitempty"`
}

func (x *CollectionMessageOnChainVO) Reset() {
	*x = CollectionMessageOnChainVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionMessageOnChainVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionMessageOnChainVO) ProtoMessage() {}

func (x *CollectionMessageOnChainVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionMessageOnChainVO.ProtoReflect.Descriptor instead.
func (*CollectionMessageOnChainVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{24}
}

func (x *CollectionMessageOnChainVO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectionMessageOnChainVO) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *CollectionMessageOnChainVO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CollectionMessageOnChainVO) GetCreatorAddress() string {
	if x != nil {
		return x.CreatorAddress
	}
	return ""
}

func (x *CollectionMessageOnChainVO) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *CollectionMessageOnChainVO) GetTraceBackVOList() []*TraceBackVO {
	if x != nil {
		return x.TraceBackVOList
	}
	return nil
}

type TraceBackVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress  string `protobuf:"bytes,1,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress    string `protobuf:"bytes,2,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	TransferType string `protobuf:"bytes,3,opt,name=transferType,proto3" json:"transferType,omitempty"`
	TransferTime string `protobuf:"bytes,4,opt,name=transferTime,proto3" json:"transferTime,omitempty"`
}

func (x *TraceBackVO) Reset() {
	*x = TraceBackVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceBackVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceBackVO) ProtoMessage() {}

func (x *TraceBackVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceBackVO.ProtoReflect.Descriptor instead.
func (*TraceBackVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{25}
}

func (x *TraceBackVO) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *TraceBackVO) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TraceBackVO) GetTransferType() string {
	if x != nil {
		return x.TransferType
	}
	return ""
}

func (x *TraceBackVO) GetTransferTime() string {
	if x != nil {
		return x.TransferTime
	}
	return ""
}

type CreatePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatePoolBo *CreatePoolBO `protobuf:"bytes,1,opt,name=createPoolBo,proto3" json:"createPoolBo,omitempty"` // Define the fields of CreatePoolBO according to their types in the Java code.
}

func (x *CreatePoolRequest) Reset() {
	*x = CreatePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolRequest) ProtoMessage() {}

func (x *CreatePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolRequest.ProtoReflect.Descriptor instead.
func (*CreatePoolRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{26}
}

func (x *CreatePoolRequest) GetCreatePoolBo() *CreatePoolBO {
	if x != nil {
		return x.CreatePoolBo
	}
	return nil
}

type CreatePoolBO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status      bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Price       int32  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Amount      int32  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	LimitAmount int32  `protobuf:"varint,6,opt,name=limitAmount,proto3" json:"limitAmount,omitempty"`
	FilePath    string `protobuf:"bytes,7,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Creator     string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *CreatePoolBO) Reset() {
	*x = CreatePoolBO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePoolBO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePoolBO) ProtoMessage() {}

func (x *CreatePoolBO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePoolBO.ProtoReflect.Descriptor instead.
func (*CreatePoolBO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{27}
}

func (x *CreatePoolBO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePoolBO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePoolBO) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreatePoolBO) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreatePoolBO) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreatePoolBO) GetLimitAmount() int32 {
	if x != nil {
		return x.LimitAmount
	}
	return 0
}

func (x *CreatePoolBO) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *CreatePoolBO) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type BuyFromPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyFromPoolBo *BuyFromPoolBO `protobuf:"bytes,1,opt,name=buyFromPoolBo,proto3" json:"buyFromPoolBo,omitempty"` // Define the fields of BuyFromPoolBO according to their types in the Java code.
}

func (x *BuyFromPoolRequest) Reset() {
	*x = BuyFromPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyFromPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyFromPoolRequest) ProtoMessage() {}

func (x *BuyFromPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyFromPoolRequest.ProtoReflect.Descriptor instead.
func (*BuyFromPoolRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{28}
}

func (x *BuyFromPoolRequest) GetBuyFromPoolBo() *BuyFromPoolBO {
	if x != nil {
		return x.BuyFromPoolBo
	}
	return nil
}

type BuyFromPoolBO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId int32 `protobuf:"varint,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (x *BuyFromPoolBO) Reset() {
	*x = BuyFromPoolBO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyFromPoolBO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyFromPoolBO) ProtoMessage() {}

func (x *BuyFromPoolBO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyFromPoolBO.ProtoReflect.Descriptor instead.
func (*BuyFromPoolBO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{29}
}

func (x *BuyFromPoolBO) GetPoolId() int32 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

type SelectPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectPoolBo *SelectPoolBO `protobuf:"bytes,1,opt,name=selectPoolBo,proto3" json:"selectPoolBo,omitempty"` // Define the fields of SelectPoolBO according to their types in the Java code.
}

func (x *SelectPoolRequest) Reset() {
	*x = SelectPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectPoolRequest) ProtoMessage() {}

func (x *SelectPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectPoolRequest.ProtoReflect.Descriptor instead.
func (*SelectPoolRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{30}
}

func (x *SelectPoolRequest) GetSelectPoolBo() *SelectPoolBO {
	if x != nil {
		return x.SelectPoolBo
	}
	return nil
}

type SelectPoolBO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatorName string `protobuf:"bytes,2,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	MinPrice    int32  `protobuf:"varint,3,opt,name=minPrice,proto3" json:"minPrice,omitempty"`
	MaxPrice    int32  `protobuf:"varint,4,opt,name=maxPrice,proto3" json:"maxPrice,omitempty"`
}

func (x *SelectPoolBO) Reset() {
	*x = SelectPoolBO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectPoolBO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectPoolBO) ProtoMessage() {}

func (x *SelectPoolBO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectPoolBO.ProtoReflect.Descriptor instead.
func (*SelectPoolBO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{31}
}

func (x *SelectPoolBO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SelectPoolBO) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *SelectPoolBO) GetMinPrice() int32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *SelectPoolBO) GetMaxPrice() int32 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

type GetPoolByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPoolByIdRequest) Reset() {
	*x = GetPoolByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolByIdRequest) ProtoMessage() {}

func (x *GetPoolByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPoolByIdRequest) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{32}
}

func (x *GetPoolByIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PoolPageVOList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolPageVO []*PoolPageVO `protobuf:"bytes,1,rep,name=poolPageVO,proto3" json:"poolPageVO,omitempty"`
}

func (x *PoolPageVOList) Reset() {
	*x = PoolPageVOList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolPageVOList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolPageVOList) ProtoMessage() {}

func (x *PoolPageVOList) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolPageVOList.ProtoReflect.Descriptor instead.
func (*PoolPageVOList) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{33}
}

func (x *PoolPageVOList) GetPoolPageVO() []*PoolPageVO {
	if x != nil {
		return x.PoolPageVO
	}
	return nil
}

type PoolPageVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId      int32  `protobuf:"varint,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Url         string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	CreatorName string `protobuf:"bytes,5,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	Status      bool   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	SoldOut     bool   `protobuf:"varint,7,opt,name=soldOut,proto3" json:"soldOut,omitempty"`
	Price       int32  `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *PoolPageVO) Reset() {
	*x = PoolPageVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolPageVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolPageVO) ProtoMessage() {}

func (x *PoolPageVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolPageVO.ProtoReflect.Descriptor instead.
func (*PoolPageVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{34}
}

func (x *PoolPageVO) GetPoolId() int32 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *PoolPageVO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PoolPageVO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PoolPageVO) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PoolPageVO) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *PoolPageVO) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *PoolPageVO) GetSoldOut() bool {
	if x != nil {
		return x.SoldOut
	}
	return false
}

func (x *PoolPageVO) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type PoolDetailsVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId          int32  `protobuf:"varint,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Url             string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Price           int32  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Amount          int32  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Left            int32  `protobuf:"varint,7,opt,name=left,proto3" json:"left,omitempty"`
	CreatorName     string `protobuf:"bytes,8,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	CreatorAddress  string `protobuf:"bytes,9,opt,name=creatorAddress,proto3" json:"creatorAddress,omitempty"`
	ContractAddress string `protobuf:"bytes,10,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
}

func (x *PoolDetailsVO) Reset() {
	*x = PoolDetailsVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolDetailsVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolDetailsVO) ProtoMessage() {}

func (x *PoolDetailsVO) ProtoReflect() protoreflect.Message {
	mi := &file_nft_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolDetailsVO.ProtoReflect.Descriptor instead.
func (*PoolDetailsVO) Descriptor() ([]byte, []int) {
	return file_nft_proto_rawDescGZIP(), []int{35}
}

func (x *PoolDetailsVO) GetPoolId() int32 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *PoolDetailsVO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PoolDetailsVO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PoolDetailsVO) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PoolDetailsVO) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PoolDetailsVO) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PoolDetailsVO) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *PoolDetailsVO) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *PoolDetailsVO) GetCreatorAddress() string {
	if x != nil {
		return x.CreatorAddress
	}
	return ""
}

func (x *PoolDetailsVO) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

var File_nft_proto protoreflect.FileDescriptor

var file_nft_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6e, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3c, 0x0a, 0x0c, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xcf, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x44, 0x54, 0x4f, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x56, 0x4f, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x12, 0x60, 0x0a, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x56, 0x4f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x56, 0x4f, 0x52, 0x1a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x56, 0x4f, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x63, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x56, 0x4f, 0x52, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4c, 0x0a, 0x0c, 0x44, 0x63, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x56, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a,
	0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x4f, 0x52,
	0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42,
	0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x42, 0x4f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x63, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x22, 0x67, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x63, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x13,
	0x67, 0x65, 0x74, 0x44, 0x63, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x42, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x63, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x42, 0x4f, 0x52, 0x13, 0x67, 0x65, 0x74, 0x44, 0x63, 0x46, 0x72, 0x6f, 0x6d, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x44, 0x63, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x4f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x27, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x42, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x42, 0x4f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x42, 0x4f, 0x52, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x42, 0x4f, 0x22, 0x52, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x52, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x22, 0xd2, 0x01, 0x0a,
	0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x65, 0x66,
	0x74, 0x22, 0xdd, 0x02, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x56, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x63,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f, 0x73,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x68, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x3b, 0x0a, 0x0d, 0x47, 0x69, 0x76, 0x65, 0x44, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x67, 0x69, 0x76, 0x65, 0x44, 0x63, 0x42, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x69, 0x76, 0x65,
	0x44, 0x63, 0x42, 0x4f, 0x52, 0x08, 0x67, 0x69, 0x76, 0x65, 0x44, 0x63, 0x42, 0x6f, 0x22, 0x54,
	0x0a, 0x08, 0x47, 0x69, 0x76, 0x65, 0x44, 0x63, 0x42, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x64, 0x63, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x44, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x34, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0c, 0x44, 0x63, 0x50, 0x61, 0x67, 0x65, 0x56,
	0x4f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x64, 0x63, 0x50, 0x61, 0x67, 0x65, 0x56,
	0x4f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44,
	0x63, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x52, 0x08, 0x64, 0x63, 0x50, 0x61, 0x67, 0x65, 0x56,
	0x4f, 0x22, 0x90, 0x01, 0x0a, 0x08, 0x44, 0x63, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x64, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x0a, 0x44, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x56, 0x4f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x64, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xef, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x56, 0x4f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x56, 0x4f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x56, 0x4f,
	0x52, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x56, 0x4f, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x56,
	0x4f, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x4f, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x6f, 0x22, 0xe2, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x4f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x4f, 0x0a, 0x12, 0x42,
	0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x6f, 0x6c,
	0x42, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x4f, 0x52, 0x0d, 0x62,
	0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x6f, 0x22, 0x27, 0x0a, 0x0d,
	0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x4f, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x42, 0x4f, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x6f, 0x6c,
	0x42, 0x6f, 0x22, 0x7c, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x6f, 0x6c,
	0x42, 0x4f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x0e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61,
	0x67, 0x65, 0x56, 0x4f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x6f, 0x6f, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x52, 0x0a,
	0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x50,
	0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x0d, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x56, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x8a, 0x09, 0x0a, 0x03,
	0x4e, 0x66, 0x74, 0x12, 0x4e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x44, 0x54,
	0x4f, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44,
	0x63, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x63, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x56, 0x4f, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x56,
	0x4f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x06, 0x47, 0x69, 0x76, 0x65, 0x44,
	0x63, 0x12, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x44, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x63, 0x12, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x63, 0x50,
	0x61, 0x67, 0x65, 0x56, 0x4f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x08, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x63, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x63, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x63, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x63, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x44, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x4f, 0x22, 0x00, 0x12, 0x2c, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x44, 0x63, 0x12, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x63, 0x50,
	0x61, 0x67, 0x65, 0x56, 0x4f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x56, 0x4f, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x46, 0x72, 0x6f, 0x6d,
	0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x79, 0x46,
	0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x56,
	0x4f, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x6f,
	0x6c, 0x12, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x56, 0x4f,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x67, 0x65,
	0x56, 0x4f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x6e, 0x66,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nft_proto_rawDescOnce sync.Once
	file_nft_proto_rawDescData = file_nft_proto_rawDesc
)

func file_nft_proto_rawDescGZIP() []byte {
	file_nft_proto_rawDescOnce.Do(func() {
		file_nft_proto_rawDescData = protoimpl.X.CompressGZIP(file_nft_proto_rawDescData)
	})
	return file_nft_proto_rawDescData
}

var file_nft_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_nft_proto_goTypes = []interface{}{
	(*Empty)(nil),                              // 0: user.Empty
	(*CommonResult)(nil),                       // 1: user.CommonResult
	(*GetMessageByHashRequest)(nil),            // 2: user.GetMessageByHashRequest
	(*GetMessageByHashDTO)(nil),                // 3: user.GetMessageByHashDTO
	(*AccountMessageVO)(nil),                   // 4: user.AccountMessageVO
	(*DcOverviewVO)(nil),                       // 5: user.DcOverviewVO
	(*CreateActivityRequest)(nil),              // 6: user.CreateActivityRequest
	(*CreateActivityBO)(nil),                   // 7: user.CreateActivityBO
	(*GetDcFromActivityRequest)(nil),           // 8: user.GetDcFromActivityRequest
	(*GetDcFromActivityBO)(nil),                // 9: user.GetDcFromActivityBO
	(*GetOneActivityRequest)(nil),              // 10: user.GetOneActivityRequest
	(*SearchActivitiesRequest)(nil),            // 11: user.SearchActivitiesRequest
	(*SearchActivityBO)(nil),                   // 12: user.SearchActivityBO
	(*ActivityPageVOList)(nil),                 // 13: user.ActivityPageVOList
	(*ActivityPageVO)(nil),                     // 14: user.ActivityPageVO
	(*ActivityDetailsVO)(nil),                  // 15: user.ActivityDetailsVO
	(*GiveDcRequest)(nil),                      // 16: user.GiveDcRequest
	(*GiveDcBO)(nil),                           // 17: user.GiveDcBO
	(*SelectDcRequest)(nil),                    // 18: user.SelectDcRequest
	(*GetDcByIdRequest)(nil),                   // 19: user.GetDcByIdRequest
	(*GetDigitalCollectionHistoryRequest)(nil), // 20: user.GetDigitalCollectionHistoryRequest
	(*DcPageVOList)(nil),                       // 21: user.DcPageVOList
	(*DcPageVO)(nil),                           // 22: user.DcPageVO
	(*DcDetailVO)(nil),                         // 23: user.DcDetailVO
	(*CollectionMessageOnChainVO)(nil),         // 24: user.CollectionMessageOnChainVO
	(*TraceBackVO)(nil),                        // 25: user.TraceBackVO
	(*CreatePoolRequest)(nil),                  // 26: user.CreatePoolRequest
	(*CreatePoolBO)(nil),                       // 27: user.CreatePoolBO
	(*BuyFromPoolRequest)(nil),                 // 28: user.BuyFromPoolRequest
	(*BuyFromPoolBO)(nil),                      // 29: user.BuyFromPoolBO
	(*SelectPoolRequest)(nil),                  // 30: user.SelectPoolRequest
	(*SelectPoolBO)(nil),                       // 31: user.SelectPoolBO
	(*GetPoolByIdRequest)(nil),                 // 32: user.GetPoolByIdRequest
	(*PoolPageVOList)(nil),                     // 33: user.PoolPageVOList
	(*PoolPageVO)(nil),                         // 34: user.PoolPageVO
	(*PoolDetailsVO)(nil),                      // 35: user.PoolDetailsVO
}
var file_nft_proto_depIdxs = []int32{
	4,  // 0: user.GetMessageByHashDTO.accountMessageVO:type_name -> user.AccountMessageVO
	24, // 1: user.GetMessageByHashDTO.collectionMessageOnChainVO:type_name -> user.CollectionMessageOnChainVO
	5,  // 2: user.AccountMessageVO.ownedCollections:type_name -> user.DcOverviewVO
	7,  // 3: user.CreateActivityRequest.createActivityBo:type_name -> user.CreateActivityBO
	9,  // 4: user.GetDcFromActivityRequest.getDcFromActivityBo:type_name -> user.GetDcFromActivityBO
	12, // 5: user.SearchActivitiesRequest.searchActivityBO:type_name -> user.SearchActivityBO
	14, // 6: user.ActivityPageVOList.activityPageVO:type_name -> user.ActivityPageVO
	17, // 7: user.GiveDcRequest.giveDcBo:type_name -> user.GiveDcBO
	22, // 8: user.DcPageVOList.dcPageVO:type_name -> user.DcPageVO
	25, // 9: user.CollectionMessageOnChainVO.traceBackVOList:type_name -> user.TraceBackVO
	27, // 10: user.CreatePoolRequest.createPoolBo:type_name -> user.CreatePoolBO
	29, // 11: user.BuyFromPoolRequest.buyFromPoolBo:type_name -> user.BuyFromPoolBO
	31, // 12: user.SelectPoolRequest.selectPoolBo:type_name -> user.SelectPoolBO
	34, // 13: user.PoolPageVOList.poolPageVO:type_name -> user.PoolPageVO
	2,  // 14: user.Nft.GetMessageByHash:input_type -> user.GetMessageByHashRequest
	6,  // 15: user.Nft.CreateActivity:input_type -> user.CreateActivityRequest
	8,  // 16: user.Nft.GetDcFromActivity:input_type -> user.GetDcFromActivityRequest
	0,  // 17: user.Nft.GetAllActivity:input_type -> user.Empty
	10, // 18: user.Nft.GetOneActivity:input_type -> user.GetOneActivityRequest
	11, // 19: user.Nft.SearchActivities:input_type -> user.SearchActivitiesRequest
	16, // 20: user.Nft.GiveDc:input_type -> user.GiveDcRequest
	0,  // 21: user.Nft.GetAllDc:input_type -> user.Empty
	18, // 22: user.Nft.SelectDc:input_type -> user.SelectDcRequest
	19, // 23: user.Nft.GetDcById:input_type -> user.GetDcByIdRequest
	0,  // 24: user.Nft.GetMyDc:input_type -> user.Empty
	20, // 25: user.Nft.GetDigitalCollectionHistory:input_type -> user.GetDigitalCollectionHistoryRequest
	26, // 26: user.Nft.CreatePool:input_type -> user.CreatePoolRequest
	28, // 27: user.Nft.BuyFromPool:input_type -> user.BuyFromPoolRequest
	30, // 28: user.Nft.SelectPool:input_type -> user.SelectPoolRequest
	32, // 29: user.Nft.GetPoolById:input_type -> user.GetPoolByIdRequest
	0,  // 30: user.Nft.GetAllPool:input_type -> user.Empty
	0,  // 31: user.Nft.GetMyPool:input_type -> user.Empty
	3,  // 32: user.Nft.GetMessageByHash:output_type -> user.GetMessageByHashDTO
	1,  // 33: user.Nft.CreateActivity:output_type -> user.CommonResult
	1,  // 34: user.Nft.GetDcFromActivity:output_type -> user.CommonResult
	13, // 35: user.Nft.GetAllActivity:output_type -> user.ActivityPageVOList
	15, // 36: user.Nft.GetOneActivity:output_type -> user.ActivityDetailsVO
	13, // 37: user.Nft.SearchActivities:output_type -> user.ActivityPageVOList
	1,  // 38: user.Nft.GiveDc:output_type -> user.CommonResult
	21, // 39: user.Nft.GetAllDc:output_type -> user.DcPageVOList
	21, // 40: user.Nft.SelectDc:output_type -> user.DcPageVOList
	23, // 41: user.Nft.GetDcById:output_type -> user.DcDetailVO
	21, // 42: user.Nft.GetMyDc:output_type -> user.DcPageVOList
	24, // 43: user.Nft.GetDigitalCollectionHistory:output_type -> user.CollectionMessageOnChainVO
	1,  // 44: user.Nft.CreatePool:output_type -> user.CommonResult
	1,  // 45: user.Nft.BuyFromPool:output_type -> user.CommonResult
	33, // 46: user.Nft.SelectPool:output_type -> user.PoolPageVOList
	35, // 47: user.Nft.GetPoolById:output_type -> user.PoolDetailsVO
	33, // 48: user.Nft.GetAllPool:output_type -> user.PoolPageVOList
	33, // 49: user.Nft.GetMyPool:output_type -> user.PoolPageVOList
	32, // [32:50] is the sub-list for method output_type
	14, // [14:32] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_nft_proto_init() }
func file_nft_proto_init() {
	if File_nft_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageByHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageByHashDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMessageVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcOverviewVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityBO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDcFromActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDcFromActivityBO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchActivitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchActivityBO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityPageVOList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityPageVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDetailsVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiveDcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiveDcBO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectDcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDcByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDigitalCollectionHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcPageVOList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcPageVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DcDetailVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionMessageOnChainVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceBackVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePoolBO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyFromPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyFromPoolBO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectPoolBO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolPageVOList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolPageVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolDetailsVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nft_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nft_proto_goTypes,
		DependencyIndexes: file_nft_proto_depIdxs,
		MessageInfos:      file_nft_proto_msgTypes,
	}.Build()
	File_nft_proto = out.File
	file_nft_proto_rawDesc = nil
	file_nft_proto_goTypes = nil
	file_nft_proto_depIdxs = nil
}
