// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userclient

import (
	"context"

	"Nft-Go/user/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty           = user.Empty
	LoginRequest    = user.LoginRequest
	RegisterRequest = user.RegisterRequest
	Response        = user.Response

	User interface {
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*Response, error)
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Response, error)
		Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Response, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*Response, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Response, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Response, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Logout(ctx, in, opts...)
}
